name: AnoDB Package

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
        - version: "pypy3.10"
        - version: "pypy3.11"
        - version: "3.10"
        - version: "3.11"
        - version: "3.12"
        - version: "3.13"
        - version: "3.13t"
          gil: 1
        - version: "3.13t"
          gil: 0
        - version: "3.14"
        # - version: "3.14t"
        #   gil: 1
        # - version: "3.14t"
        #   gil: 0
    services:
      # Label used to access the service container
      postgres:
        # GitHub Docker Images: https://github.com/docker-library/official-images/blob/master/library/postgres
        # NOTE we could also activate the local ubuntu postgres server
        image: postgres:alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      PYTHON_GIL: ${{ matrix.python.gil }}
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python.version }}
      # uses: actions/setup-python@v5
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python.version }}
        allow-prereleases: true
        cache: "pip"
    - name: Install dependencies
      run: make venv.check
    # - name: Check types with mypy
    #   run: make check.mypy
    - name: Check types with pyright
      run: make check.pyright
    # - name: Lint with black
    #   run: black --check anodb.py test/test_anodb.py
    # - name: Lint with flake8
    #   run: make check.flake8
    - name: Lint with ruff
      run: make check.ruff
    - name: Test with pytest and databases
      run: make check.pytest
    - name: Coverage tests
      run: make check.coverage
    - name: Check markdown
      run: make check.pymarkdown
